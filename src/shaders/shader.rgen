#version 460
#extension GL_NV_ray_tracing : require
#extension GL_GOOGLE_include_directive : require
#extension GL_GOOGLE_include_directive : enable

#include "Camera.glsl"

layout(set = 0, binding = 0) uniform accelerationStructureNV scene;
layout(set = 0, binding = 1, rgba8) uniform image2D resultImage;
layout(set = 0, binding = 2, std140) uniform cameraBuffer
{
	Camera camera;
};

layout(location = 0) rayPayloadNV vec3 resultColor;

void main()
{
	const uint rayFlags = gl_RayFlagsNoneNV;
    const uint cullMask = 0xFF;
    const uint sbtRecordOffset = 0;
    const uint sbtRecordStride = 0;
    const uint missIndex = 0;
    const float tmin = 0.0f;
    const float tmax = 10.0f;
    const int payloadLocation = 0;
	
	Ray r = GenerateRayFromCamera(camera);
    traceNV(scene, rayFlags, cullMask, sbtRecordOffset, sbtRecordStride, missIndex, r.origin, tmin, r.dir, tmax, payloadLocation);


    imageStore(resultImage, ivec2(gl_LaunchIDNV.xy), vec4(resultColor, 1.0f));
}
